<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Admin" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="Hello" xml:space="preserve">
    <value>Hello</value>
  </data>
  <data name="Home" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="UserPaid" xml:space="preserve">
    <value>Registered user</value>
  </data>
  <data name="Администратор" xml:space="preserve">
    <value>Administrator</value>
  </data>
  <data name="Актеры" xml:space="preserve">
    <value>Actors</value>
  </data>
  <data name="АЧтоПокорочеИмечкаНету" xml:space="preserve">
    <value>Isn't there a shorter name?</value>
  </data>
  <data name="АЭтуСтрочечкуЗаполнятьНеНужно" xml:space="preserve">
    <value>Don't you need to fill in this line ?</value>
  </data>
  <data name="БеднягаНеПроскочилДавайЕщеПоугадывай" xml:space="preserve">
    <value>Didn't work out? Let's try again</value>
  </data>
  <data name="ВведитеЛогинИПароль" xml:space="preserve">
    <value>Enter login and password</value>
  </data>
  <data name="ВведитеСтарыйПароль" xml:space="preserve">
    <value>Enter your old password</value>
  </data>
  <data name="Вход" xml:space="preserve">
    <value>LogIn</value>
  </data>
  <data name="ВыВошлиКак" xml:space="preserve">
    <value>You're logged in as</value>
  </data>
  <data name="Выкупить" xml:space="preserve">
    <value>Redeem</value>
  </data>
  <data name="ДаВыкупить" xml:space="preserve">
    <value>Yes, Redeem</value>
  </data>
  <data name="Дата" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="Добавить" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Добавление" xml:space="preserve">
    <value>Addition</value>
  </data>
  <data name="ДоброПожаловать" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="ЕслиНетАккаунта" xml:space="preserve">
    <value>&lt;-If you don't have an account</value>
  </data>
  <data name="Забронировать" xml:space="preserve">
    <value>Book</value>
  </data>
  <data name="ЗамечательнаяПьесаБезАктеровЗаТоНиКтоНеНадоест" xml:space="preserve">
    <value>A wonderful play without actors, but nobody will bother you</value>
  </data>
  <data name="ЗапомнитьМеня" xml:space="preserve">
    <value>Remember me</value>
  </data>
  <data name="ИзменитьПароль" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="Имя" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Контакты" xml:space="preserve">
    <value>Contacts</value>
  </data>
  <data name="Курьер" xml:space="preserve">
    <value>Courier</value>
  </data>
  <data name="ЛичныйКабинет" xml:space="preserve">
    <value>Personal cabinet</value>
  </data>
  <data name="Назад" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="НазваниеПьесы" xml:space="preserve">
    <value>Name of the play</value>
  </data>
  <data name="НеЛучшеПивкаПопью" xml:space="preserve">
    <value>I better get a beer</value>
  </data>
  <data name="НеНуЛюдиДолжныЗнатьОЧемРечь" xml:space="preserve">
    <value>Hey, people should know what is about</value>
  </data>
  <data name="НовыйПароль" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="НомерМеста" xml:space="preserve">
    <value>Seat number</value>
  </data>
  <data name="НуИКудаЭтоПисатьСократиНазвание" xml:space="preserve">
    <value>Well, where to write it? Shorten the name</value>
  </data>
  <data name="ОбластьЗала" xml:space="preserve">
    <value>Hall Area</value>
  </data>
  <data name="ОнаСамаСебяСнимает" xml:space="preserve">
    <value>Does it make itself?</value>
  </data>
  <data name="Описание" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="ОшибкаВводаПароля" xml:space="preserve">
    <value>Wrong password</value>
  </data>
  <data name="ПанельАдминистратора" xml:space="preserve">
    <value>Admin Panel</value>
  </data>
  <data name="ПаролиНеСовпадают" xml:space="preserve">
    <value>Passwords do not match</value>
  </data>
  <data name="Пароль" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="ПовторитеПароль" xml:space="preserve">
    <value>Confirm password</value>
  </data>
  <data name="Подробно" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="ПосмотретьЗарегистрированыхПользователей" xml:space="preserve">
    <value>View registered users</value>
  </data>
  <data name="ПосмотретьСвободныеМеста" xml:space="preserve">
    <value>View free seats</value>
  </data>
  <data name="ПосмотретьСписокПьес" xml:space="preserve">
    <value>View a list of plays</value>
  </data>
  <data name="Применить" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Продолжительность" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="Регистрация" xml:space="preserve">
    <value>Registration</value>
  </data>
  <data name="Редактирование" xml:space="preserve">
    <value>Editing</value>
  </data>
  <data name="Редактировать" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Режиссер" xml:space="preserve">
    <value>Producer</value>
  </data>
  <data name="РезультатОплаты" xml:space="preserve">
    <value>Payment status</value>
  </data>
  <data name="Сourier" xml:space="preserve">
    <value>Сourier</value>
  </data>
  <data name="СменаПароля" xml:space="preserve">
    <value>Change password</value>
  </data>
  <data name="СозданиеНовогоАккаунта" xml:space="preserve">
    <value>Create a new account</value>
  </data>
  <data name="СоздатьНовуюПьесу" xml:space="preserve">
    <value>Create a new play</value>
  </data>
  <data name="СоздатьНовыеМестаВЗале" xml:space="preserve">
    <value>Create a new seats in the hall</value>
  </data>
  <data name="Сохранить" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="СписокПокупателей" xml:space="preserve">
    <value>List of customers</value>
  </data>
  <data name="Стартовая" xml:space="preserve">
    <value>Home</value>
  </data>
  <data name="СтраницаПодтвержденияЗаказа" xml:space="preserve">
    <value>Order Confirmation page</value>
  </data>
  <data name="Театр" xml:space="preserve">
    <value>Theater</value>
  </data>
  <data name="ТоестьОнаНиКогдаНеЗакончится" xml:space="preserve">
    <value>Does it have an end?</value>
  </data>
  <data name="ТочноУдалить" xml:space="preserve">
    <value>Are you sure to remove?</value>
  </data>
  <data name="ТыНеПоверишьНоИЭтоПолеЖелательноЗаполнить" xml:space="preserve">
    <value>You won't believe but it is desirable to fill in this field</value>
  </data>
  <data name="ТыТакВсюПьесуРасскажешьКорочеНужно" xml:space="preserve">
    <value>You're going to tell the whole play. It's need to be shorter</value>
  </data>
  <data name="ТыХорошоПодумал" xml:space="preserve">
    <value>Did you think well?</value>
  </data>
  <data name="УВасНетЗабронированыхБилетов" xml:space="preserve">
    <value>You do not have any booked tickets</value>
  </data>
  <data name="Удаление" xml:space="preserve">
    <value>Removal</value>
  </data>
  <data name="Удалить" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ФормаДляАвторизации" xml:space="preserve">
    <value>Authorization form</value>
  </data>
  <data name="ФормаДляРегистрации" xml:space="preserve">
    <value>Registration Form</value>
  </data>
  <data name="ФормаДляСменыПароля" xml:space="preserve">
    <value>Change Password Form</value>
  </data>
  <data name="Цена" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="Язык" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="НеОплачено" xml:space="preserve">
    <value>Not paid</value>
  </data>
  <data name="Оплачено" xml:space="preserve">
    <value>Paid</value>
  </data>
  <data name="СвободныеМеста" xml:space="preserve">
    <value>Free seats</value>
  </data>
</root>